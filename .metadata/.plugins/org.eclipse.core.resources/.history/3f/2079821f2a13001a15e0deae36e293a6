package com.lowji.controller;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.lowji.entity.ChiTietSanPham;
import com.lowji.entity.DanhMucSanPham;
import com.lowji.entity.GioHang;
import com.lowji.entity.JSONSANPHAM;
import com.lowji.entity.MauSanPham;
import com.lowji.entity.SanPham;
import com.lowji.entity.SizeSanPham;
import com.lowji.service.NhanVienService;
import com.lowji.service.SanPhamService;

@Controller
//@SessionAttributes({"email","giohang"})
@SessionAttributes({"giohang"})
@RequestMapping("api/")

public class ApiController {
	
	@Autowired
	NhanVienService nhanvienService;
	
	@Autowired
	SanPhamService sanPhamService;
	
	@GetMapping("KiemTraDangNhap")
	@ResponseBody
	public String KiemTraDangNhap(@RequestParam String email,@RequestParam String matkhau,ModelMap modelmap) {
		
		boolean kiemtra =  nhanvienService.KiemTraDangNhap(email, matkhau);
		//modelmap.addAttribute("email",email);
		
		return ""+kiemtra;
	}
	@GetMapping("ThemGioHang")
	@ResponseBody
	public String ThemGioHang(@RequestParam int masp,@RequestParam int masize,@RequestParam int mamau,@RequestParam String tensp,@RequestParam String giatien,@RequestParam String tenmau,@RequestParam String tensize,@RequestParam int soluong,@RequestParam int machitiet, HttpSession httpSession) {
		
		if( httpSession.getAttribute("giohang") == null ) {
			List<GioHang> gioHangs =  new ArrayList<GioHang>();
			GioHang gioHang = new GioHang(); 
			gioHang.setMasp(masp);
			gioHang.setMasize(masize);
			gioHang.setMamau(mamau);
			gioHang.setTensp(tensp);
			gioHang.setGiatien(giatien);
			gioHang.setTenmau(tenmau);
			gioHang.setTensize(tensize);
			gioHang.setSoluong(1);
			gioHang.setMachitiet(machitiet);
			
			gioHangs.add(gioHang);
			httpSession.setAttribute("giohang", gioHangs);
			
			return gioHangs.size() + "";
		}else {
			
			List<GioHang> listGioHangs = (List<GioHang>) httpSession.getAttribute("giohang");
			int vitri = KiemTraSanPhamTonTai(listGioHangs,masp, masize, mamau, httpSession);
			
			if (vitri == -1) {
				
				GioHang gioHang = new GioHang(); 
				gioHang.setMasp(masp);
				gioHang.setMasize(masize);
				gioHang.setMamau(mamau);
				gioHang.setTensp(tensp);
				gioHang.setGiatien(giatien);
				gioHang.setTenmau(tenmau);
				gioHang.setTensize(tensize);
				gioHang.setSoluong(1);
				gioHang.setMachitiet(machitiet);
				listGioHangs.add(gioHang);
			}
			else {
				
				int soluongmoi = listGioHangs.get(vitri).getSoluong()+1;
				listGioHangs.get(vitri).setSoluong(soluongmoi);
			}
			return listGioHangs.size() + "";
		}
		
	}

	private int KiemTraSanPhamTonTai(List<GioHang> listGioHangs,int masp,int masize,int mamau,HttpSession httpSession) {
		
		
		
		for (int i = 0; i < listGioHangs.size(); i++) {
			if(listGioHangs.get(i).getMasp()==masp && listGioHangs.get(i).getMasize() == masize && listGioHangs.get(i).getMamau() == mamau) {
				return i;
			}
		}
		return -1; // không tìm thấy sản phẩm
	}
	@GetMapping("CapNhatGioHang")
	@ResponseBody
	public void CapNhatGioHang(HttpSession httpSession , @RequestParam int soluong,@RequestParam int masp,@RequestParam int mamau,@RequestParam int masize) {
		if( httpSession.getAttribute("giohang") != null ) {
			List<GioHang> listGioHangs = (List<GioHang>) httpSession.getAttribute("giohang");
			int vitri = KiemTraSanPhamTonTai(listGioHangs, masp, masize, mamau, httpSession);
			
			listGioHangs.get(vitri).setSoluong(soluong);
		}
	}
	@GetMapping("XoaGioHang")
	@ResponseBody
	public void XoaGioHang(HttpSession httpSession ,@RequestParam int masp,@RequestParam int mamau,@RequestParam int masize) {
		if( httpSession.getAttribute("giohang") != null ) {
			List<GioHang> listGioHangs = (List<GioHang>) httpSession.getAttribute("giohang");
			int vitri = KiemTraSanPhamTonTai(listGioHangs, masp, masize, mamau, httpSession);
			
			listGioHangs.remove(vitri);
		}
	}

//	@GetMapping("LaySanPhamLimit")
//	@ResponseBody
//	public String LaySanPhamLimit(@RequestParam int spbatdau) {
//		String sss = "";
//		List<SanPham> listSanPhams = sanPhamService.LayDanhSachSanPhamLimit(spbatdau);
//		for (SanPham sanPham : listSanPhams) {
//			sss += "<tr>";
//			sss += "<td><div class='checkbox'><label><input class = 'checkboxsanpham' type='checkbox' value=''></label></div></td>";
//			sss += "<td class = 'tensp' data-masp ='" + sanPham.getMasanpham() + "'>" + sanPham.getTensanpham()
//					+ "</td>";
//			sss += "<td class = 'giatien'>" + sanPham.getGiatien() + "</td>";
//			sss += "<td class = 'gianhcho'>" + sanPham.getGianhcho() + "</td>";
//			sss += "</tr>";
//		}
//		return sss;
//	}
	@GetMapping("XoaSanPham")
	@ResponseBody
	public String XoaSanPhamTheoMaSanPham(@RequestParam int masp) {
		sanPhamService.XoaSanPhamTheoMaSanPham(masp);
		return "";
	}
	
	@Autowired
	ServletContext context;
	@PostMapping("UpLoadFile")
	@ResponseBody
	public String UpLoadFile(MultipartHttpServletRequest request) {
		
		String path_save_file = context.getRealPath("/resources/image/sanpham/");
		
		Iterator<String> listNames = request.getFileNames();
		MultipartFile mp= request.getFile(listNames.next()); // lấy file
		
		File file_save = new File(path_save_file + mp.getOriginalFilename());
		
		
		try {
			mp.transferTo(file_save);
		} catch (IllegalStateException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return "true";
	}
	@PostMapping("themsanphamm")
	@ResponseBody
	public void ThemSanPham(@RequestParam String dataJson) { //nhận chuỗi json bên query truyền qua
		
		ObjectMapper objectMapper = new ObjectMapper(); // cho phép tất cả các node trong chuỗi json
		
		JsonNode jsonObject;//đại diện cho các node của chuỗi json . ngoặc nhọn là ob, ngoặc vuông là arr
		
		
		try {
			SanPham sanPham = new SanPham();
			jsonObject = objectMapper.readTree(dataJson);
			
			DanhMucSanPham danhMucSanPham = new DanhMucSanPham();
			danhMucSanPham.setMadanhmuc(jsonObject.get("danhmucsanpham").asInt()); // đây là jsson ob{}
			
			JsonNode jsonChiTiet = jsonObject.get("chitietsanpham"); //json arr []
			Set<ChiTietSanPham> listChiTiet = new HashSet<>();
			for (JsonNode objectChiTiet : jsonChiTiet) {
				ChiTietSanPham chiTietSanPham = new ChiTietSanPham();
				
				MauSanPham mauSanPham =  new MauSanPham();
				mauSanPham.setMamau(objectChiTiet.get("mausanpham").asInt());
				
				
				SizeSanPham sizeSanPham =  new SizeSanPham();
				sizeSanPham.setMasize(objectChiTiet.get("sizesanpham").asInt());
				
				chiTietSanPham.setMausanpham(mauSanPham); // giá trị vào chitietsp
				chiTietSanPham.setSizesanpham(sizeSanPham);
				chiTietSanPham.setSoluong(objectChiTiet.get("soluong").asInt());
				
				listChiTiet.add(chiTietSanPham);
			}
			
				String tensanpham = jsonObject.get("tensanpham").asText();
				String giatien = jsonObject.get("giatien").asText();
				String mota = jsonObject.get("mota").asText();
				String hinhsanpham = jsonObject.get("hinhsanpham").asText();
				String gianhcho = jsonObject.get("gianhcho").asText();
				
			sanPham.setChitietsanpham(listChiTiet);
			sanPham.setDanhmucsanpham(danhMucSanPham);
			sanPham.setTensanpham(tensanpham);
			sanPham.setGiatien(giatien);
			sanPham.setMota(mota);
			sanPham.setHinhsanpham(hinhsanpham);
			sanPham.setGianhcho(gianhcho);
			
			sanPhamService.ThemSanPham(sanPham);
			
		} catch (IOException e) {
			
			e.printStackTrace();
		}
}
	
	@PostMapping(path="LayDanhSachSanPhamTheoMa",produces = "application/json; charset=utf-8")
	@ResponseBody
	public JSONSANPHAM LayDanhSachSanPhamTheoMa(@RequestParam int masanpham){
		
		JSONSANPHAM jsonsanpham = new JSONSANPHAM();
		
		SanPham sanPhams = sanPhamService.LayDanhSachTheoMSP(masanpham);
		
		jsonsanpham.setMasanpham(sanPhams.getMasanpham());
		jsonsanpham.setTensanpham(sanPhams.getTensanpham());
		jsonsanpham.setGiatien(sanPhams.getGiatien());
		jsonsanpham.setMota(sanPhams.getMota());
		jsonsanpham.setHinhsanpham(sanPhams.getHinhsanpham());
		jsonsanpham.setGianhcho(sanPhams.getGianhcho());
		
		
		DanhMucSanPham danhMucSanPham = new DanhMucSanPham();
		danhMucSanPham.setMadanhmuc(sanPhams.getDanhmucsanpham().getMadanhmuc());
		danhMucSanPham.setTendanhmuc(sanPhams.getDanhmucsanpham().getTendanhmuc());
		
		Set<ChiTietSanPham> chiTietSanPhams =  new HashSet<>();
		
		for (ChiTietSanPham value : sanPhams.getChitietsanpham()) {
			ChiTietSanPham chiTietSanPham =  new ChiTietSanPham();
			chiTietSanPham.setMachitietsanpham(value.getMachitietsanpham());
			
			MauSanPham mausanpham =  new MauSanPham();
			mausanpham.setMamau(value.getMausanpham().getMamau());
			mausanpham.setTenmau(value.getMausanpham().getTenmau());
			
			chiTietSanPham.setMausanpham(mausanpham);
			
			SizeSanPham sizeSanPham = new SizeSanPham();
			sizeSanPham.setMasize(value.getSizesanpham().getMasize());
			sizeSanPham.setSize(value.getSizesanpham().getSize());
			
			chiTietSanPham.setSizesanpham(sizeSanPham);
			chiTietSanPham.setSoluong(value.getSoluong());
			chiTietSanPhams.add(chiTietSanPham);
			
		}
		
		jsonsanpham.setDanhmucsanpham(danhMucSanPham);
		jsonsanpham.setChitietsanpham(chiTietSanPhams);
		
		return jsonsanpham;
	}
}